
#include "../../header/myheader.h"

class LT
{
public:


// D D

//        unordered_set<int> hset;
//        for (int i = 0, j = 0, win = 0; j < nums.size(); j++) {
//            while (hset.find(nums[j]) != hset.end()) {            // jjjjjjjjjjj
//                hset.erase(nums[i]);
//                win -= nums[i];
//                i++;                      // iiiiiiiiii
//            }
//            hset.insert(nums[j]);
//            win += nums[j];
//            result = max(result, win);
//        }





//Runtime: 321 ms, faster than 79.95% of C++ online submissions for Maximum Erasure Value.
//Memory Usage: 99.6 MB, less than 74.36% of C++ online submissions for Maximum Erasure Value.
// sliding window, 不重复
    int lta(vector<int>& nums)
    {
        unordered_map<int, int> map2;
        int ans = 0;
        int sum2 = 0;
        int st = 0;
        for (int i = 0; i < nums.size(); ++i)
        {
            int t2 = nums[i];
            if (map2.count(t2))
            {
                int t3 = map2[t2];
                while (st <= t3)
                {
                    sum2 -= nums[st++];
                }
                sum2 += t2;         // .. 之前使用下面的，就是 删除 到 t3 前面一位， 由于 [t3]==[i], 所以sum 不会变。
                                    // 但是，出现了 st > t3的情况，就算是 早就被删除了。 这种情况下会 漏掉一个。。。
//                st += 2;
                map2[t2] = i;
                #ifdef __test
                cout<<t3<<", "<<t2<<", "<<i<<endl;
                int tx = 0;
                for (int k = t3; k < i; ++k)
                {
                    tx += nums[k];
                }
                cout<<" --- "<<tx<<endl;
                #endif // __test
                ans = max(ans, sum2);           // 。。。。。++ ，按之前的想法，st必然小于t3，所以 这里的 sum2 必然 小于等于 上一个下标的 sum2。。。结果 st>t3，导致这里没有变小，而是变大了。
            }
            else
            {
                map2[t2] = i;
                sum2 += t2;
                ans = max(ans, sum2);
            }
        }
        #ifdef __test
        cout<<sum2<<endl;
//        cout<<std::accumulate(begin(nums), end(nums), 0)<<endl;
        #endif // __test
        return ans;
    }

};

int main()
{

    LT lt;

//    myvi v = {4,2,4,5,6};

// 16911
//    myvi v = {187,470,25,436,538,809,441,167,477,110,275,133,666,345,411,459,490,266,987,
//    965,429,166,809,340,467,318,125,165,809,610,31,585,970,306,42,189,169,743,78,810,70,382,
//    367,490,787,670,476,278,775,673,299,19,893,817,971,458,409,886,434};

// 45083
    myvi v = {544,914,868,579,654,594,577,564,905,417,436,26,901,618,620,108,971,888,961,609,
    617,811,814,872,503,959,621,746,644,555,80,220,192,113,219,950,889,751,571,508,751,124,167,
    966,35,795,336,951,284,186,432,673,629,972,952,107,134,756,301,362,940,186,386,919,789,188,
    662,422,917,198,827,305,657,471,478,728,881,323,67,111,299,269,165,328,890,321,541,257,637,
    919,876,447,576,260,203,314,252,266,419,327,429,196,743,996,280,392,749,804,313,833,148,573,
    37,639,345,327,662,145,643,877,148,628,807,618,881,577,222,148,842,310,34,559,828,479,631,933,
    386,407,568,22,973,443,239,219,560,153,463,348,272,561,925,453,849,646,497,641,43,57,394,430,
    308,865,749,566,689,209,941,62,383,973,252,340,302,961,703,30,545,890,96,438,601,759,649,148,
    449,437,117,417,792,140,118,455,893,55,155,527,685,996,155,233,824,232,339,429,83,967,905,928,
    943,448,723,603,404,169,132,96,302,34,682,487,356,229,580,425,481,760,755,162,623,881,687,10,
    512,600,981,809,495,942,615,717,266,197,216,683,338,940,902,636,848,802,186,704,363,93,516,909,
    347,991,817,567,500,648,672,20,384,608,726,38,474,74,358,884,385,671,65,179,172,449,973,263,397,
    876,266,670,86,835,386,167,824,593,698,42,241,569,487,362,867,438,368,657,616,326,215,773,946,485,
    570,719,375,840,255,20,500,336,440,10,596,468,140,959,844,588,72,88,446,608,238,310,927};

    cout<<lt.lta(v)<<endl;

    return 0;
}
