
#include "../header/myheader.h"

class LT0260
{
public:

// D

// 先全部xor。 然后得到 xor后结果的最后一个1. 所在的位。  用这个位 来将 数组区分成2部分。
// diff &= -diff;  能得到 最后一个位。
// 00000101 &=
// 11111010 + 1
// 11111011 &
// 00000101
// 00000001     结果。

// 10
// 000001010
// 111110101
// 111110110
// 000000010   。。



// g

// map. 但是内存不是O(1)
// xor，但是不知道怎么得出结果。
// sort，和前面对比。但不是线性。
// 1 ^ 2 = 3    01 ^ 10 == 11
// 2^3  10^11 = 01
// Related Topics: bit manipulation
// 难道32个位 每个for一圈？ 就是 内存是 32个bit。 一个for。
// 1,1,2,2,3,5
// 3^5  011^101 = 110
// 001
// 001
// 010
// 010
// 011
// 101
// 每个bit 累加 得到的结果 和 ^ 是一样的。
    vector<int> lt0260a(vector<int>& nums)
    {

    }

};

int main()
{

    LT0260 lt;


    return 0;
}
