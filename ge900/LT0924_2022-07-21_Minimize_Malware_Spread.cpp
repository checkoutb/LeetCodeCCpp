
#include "../header/myheader.h"

class LT0924
{
public:

    // D D

    //int n = graph.size();
    //for (int i = 0; i < n; ++i) parents.push_back(i);
    //for (int i = 0; i < n; ++i)
    //    for (int j = i + 1; j < n; ++j)
    //        if (graph[i][j]) uni(i, j);
    //vector<int> area(n, 0), malware(n, 0);
    //for (int i = 0; i < n; ++i) area[find(i)]++;
    //for (int i : initial) malware[find(i)]++;
    //vector<int> res = { 1, 0 };
    //for (int i : initial)
    //    res = min(res, { (malware[find(i)] == 1) * (-area[find(i)]), i });
    //return res[1];




//Runtime: 211 ms, faster than 88.84 % of C++ online submissions for Minimize Malware Spread.
//Memory Usage : 64.9 MB, less than 79.03 % of C++ online submissions for Minimize Malware Spread.
    // ’“≤ª¡¨Õ®
    int lt0924a(vector<vector<int>>& graph, vector<int>& initial)
    {
        int sz1 = graph.size();
        vector<int> uf(sz1, -1);

        for (int i = 0; i < sz1; ++i)
        {
            int t2 = ufa(uf, i);
            for (int j = i + 1; j < sz1; ++j)
            {
                if (graph[i][j] == 0)
                    continue;

                int t3 = ufa(uf, j);
                if (t2 != t3)
                {
                    uf[t3] = t2;
                }
            }
        }

        unordered_map<int, int> map2;
        unordered_map<int, vector<int>> map3;

        for (int i = 0; i < sz1; ++i)
        {
            map2[ufa(uf, i)]++;
        }
        for (int i = 0; i < initial.size(); ++i)
        {
            map3[ufa(uf, initial[i])].push_back(initial[i]);
        }

#ifdef __test
        for (auto& p : map2)
        {
            cout << p.first << " - " << p.second << endl;
        }
        cout << " ============== " << endl;
        for (auto& p : map3)
        {
            cout << p.first << " - [";
            for (int i : p.second)
            {
                cout << i << ", ";
            }
            cout << "]" << endl;
        }
#endif

        int ans = *min_element(begin(initial), end(initial));
        int mx = -1;
        for (unordered_map<int, vector<int>>::iterator it = begin(map3); it != end(map3); it++)
        {
            if (it->second.size() > 1)
                continue;

            if (map2[it->first] > mx)
            {
                mx = map2[it->first];
                ans = it->second[0];
            }
            else if (map2[it->first] == mx)
            {
                ans = min(ans, it->second[0]);
            }
        }
        return ans;
    }

    int ufa(vector<int>& uf, int idx)
    {
        return uf[idx] == -1 ? idx : (uf[idx] = ufa(uf, uf[idx]));
    }

};

int main()
{

    LT0924 lt;

    myvvi vv = { {1, 0, 0, 0},
                {0, 1, 0, 0},
                {0, 0, 1, 1},
                {0, 0, 1, 1} };
    myvi v = { 3, 1 };

    cout << lt.lt0924a(vv, v) << endl;

    return 0;
}
